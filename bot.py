import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    CallbackQueryHandler,
    CallbackContext,
    MessageHandler,
    filters,
)
from telegram.error import BadRequest
from dotenv import load_dotenv
import os
import pytz
from datetime import time
import sqlite3
import json
import atexit

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env
load_dotenv()

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("BOT_TOKEN")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–æ–∫–µ–Ω –∑–∞–≥—Ä—É–∂–µ–Ω
if not BOT_TOKEN:
    raise ValueError("BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–∫–∞–∂–∏—Ç–µ –µ–≥–æ –≤ —Ñ–∞–π–ª–µ .env")

# –£–∫–∞–∂–∏—Ç–µ –∏–º—è –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ (–±–µ–∑ @)
BOT_USERNAME = "Stars_Space_bot"

# –£–∫–∞–∂–∏—Ç–µ –≤–∞—à CHAT_ID
CHAT_ID = 7524255042

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)

# –£–∫–∞–∂–∏—Ç–µ chat_id –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞
CHANNEL_CHAT_ID = "-1002451778906"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ chat_id –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞
CHANNEL_USERNAME = "@STAR_SPAIS"

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–∞–Ω–∞–ª—ã –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏
ADDITIONAL_CHANNELS = [
    {"username": "@moneyobus", "chat_id": " -1002302071983"},  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    {"username": "@kamysn_mlem", "chat_id": " -1002480312005"},  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –¥–∞–Ω–Ω—ã–µ –≤—Ç–æ—Ä–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    {"username": "@blacklistLoadovicha", "chat_id": " -1002492802980"},  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –¥–∞–Ω–Ω—ã–µ —Ç—Ä–µ—Ç—å–µ–≥–æ –∫–∞–Ω–∞–ª–∞
]

# –°–æ–∑–¥–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö (—Ñ–∞–π–ª —Å–æ–∑–¥–∞—Å—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)
conn = sqlite3.connect('users.db', check_same_thread=False)
cursor = conn.cursor()

# –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
cursor.execute('''
CREATE TABLE IF NOT EXISTS users (
    user_id INTEGER PRIMARY KEY,
    balance INTEGER DEFAULT 0,
    referrals TEXT DEFAULT '[]',
    used_referrals TEXT DEFAULT '[]'
)
''')
conn.commit()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def get_user_data(user_id):
    cursor.execute('SELECT balance, referrals, used_referrals FROM users WHERE user_id = ?', (user_id,))
    result = cursor.fetchone()
    if result:
        balance, referrals, used_referrals = result
        return {
            "balance": balance,
            "referrals": json.loads(referrals),
            "used_referrals": json.loads(used_referrals)
        }
    else:
        return None

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def create_user(user_id):
    cursor.execute('INSERT INTO users (user_id) VALUES (?)', (user_id,))
    conn.commit()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def update_user_data(user_id, balance=None, referrals=None, used_referrals=None):
    if balance is not None:
        cursor.execute('UPDATE users SET balance = ? WHERE user_id = ?', (balance, user_id))
    if referrals is not None:
        cursor.execute('UPDATE users SET referrals = ? WHERE user_id = ?', (json.dumps(referrals), user_id))
    if used_referrals is not None:
        cursor.execute('UPDATE users SET used_referrals = ? WHERE user_id = ?', (json.dumps(used_referrals), user_id))
    conn.commit()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª–∞
def add_referral(user_id, referral_id):
    user_data = get_user_data(user_id)
    if user_data:
        referrals = user_data["referrals"]
        used_referrals = user_data["used_referrals"]

        if referral_id not in used_referrals:
            referrals.append(referral_id)
            used_referrals.append(referral_id)
            update_user_data(user_id, referrals=referrals, used_referrals=used_referrals)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
def add_balance(user_id, amount):
    user_data = get_user_data(user_id)
    if user_data:
        new_balance = user_data["balance"] + amount
        update_user_data(user_id, balance=new_balance)

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã
async def is_subscribed(update: Update, context: CallbackContext) -> bool:
    user_id = update.effective_user.id
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞–Ω–∞–ª
        chat_member = await context.bot.get_chat_member(chat_id=CHANNEL_USERNAME, user_id=user_id)
        if chat_member.status not in ["member", "administrator", "creator"]:
            return False

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–∞–Ω–∞–ª—ã
        for channel in ADDITIONAL_CHANNELS:
            chat_member = await context.bot.get_chat_member(chat_id=channel["username"], user_id=user_id)
            if chat_member.status not in ["member", "administrator", "creator"]:
                return False

        return True
    except BadRequest:
        return False

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: CallbackContext) -> None:
    user_id = update.effective_user.id

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    user_data = get_user_data(user_id)

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
    if not user_data:
        create_user(user_id)
        user_data = get_user_data(user_id)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
    if context.args and context.args[0].isdigit():
        referrer_id = int(context.args[0])
        if referrer_id != user_id and get_user_data(referrer_id):
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
            referrer_data = get_user_data(referrer_id)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —ç—Ç—É —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
            if user_id not in referrer_data["used_referrals"]:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–¥–ø–∏—Å–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã
                if await is_subscribed(update, context):
                    # –ü–æ–ø–æ–ª–Ω—è–µ–º –±–∞–ª–∞–Ω—Å —Ä–µ—Ñ–µ—Ä–µ—Ä–∞ –Ω–∞ 2 –∑–≤–µ–∑–¥—ã
                    add_balance(referrer_id, 2)
                    add_referral(referrer_id, user_id)

                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–µ—Ä—É
                    await context.bot.send_message(
                        chat_id=referrer_id,
                        text="üéâ –ü–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ –ø–µ—Ä–µ—à–ª–∏ –∏ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª! –í—ã –ø–æ–ª—É—á–∏–ª–∏ 2 –∑–≤–µ–∑–¥—ã.",
                    )
                else:
                    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã
                    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø–µ—Ä–µ—à–µ–ª –ø–æ —Å—Å—ã–ª–∫–µ, –Ω–æ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã.")
            else:
                # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª —ç—Ç—É —Å—Å—ã–ª–∫—É
                logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª —Å—Å—ã–ª–∫—É —Ä–µ—Ñ–µ—Ä–µ—Ä–∞ {referrer_id}.")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–¥–ø–∏—Å–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã
    if await is_subscribed(update, context):
        # –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é —Å –±–∞–ª–∞–Ω—Å–æ–º –∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π
        ref_link = f"https://t.me/{BOT_USERNAME}?start={user_id}"  # –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
        keyboard = [
            [InlineKeyboardButton("üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞", callback_data="show_ref_link")],
            [InlineKeyboardButton("–í—ã–≤–æ–¥", callback_data="withdraw")],
            [InlineKeyboardButton("–ú–æ–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã", callback_data="referrals")],
            [InlineKeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data="info")],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
        await update.message.reply_text(
            f"üéâ –í—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã!\n\n"
            f"‚≠ê –í–∞—à –±–∞–ª–∞–Ω—Å: {user_data['balance']} –∑–≤–µ–∑–¥",
            reply_markup=reply_markup,
        )
    else:
        # –ï—Å–ª–∏ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏
        keyboard = [
            [InlineKeyboardButton("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞–Ω–∞–ª", url=f"https://t.me/{CHANNEL_USERNAME[1:]}")],
            [InlineKeyboardButton("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª 1", url=f"https://t.me/{ADDITIONAL_CHANNELS[0]['username'][1:]}")],
            [InlineKeyboardButton("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª 2", url=f"https://t.me/{ADDITIONAL_CHANNELS[1]['username'][1:]}")],
            [InlineKeyboardButton("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª 3", url=f"https://t.me/{ADDITIONAL_CHANNELS[2]['username'][1:]}")],
            [InlineKeyboardButton("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å", callback_data="check_subscription")],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await update.message.reply_text(
            "–ü—Ä–∏–≤–µ—Ç! –ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã –∏ –Ω–∞–∂–º–∏ '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å', —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.",
            reply_markup=reply_markup,
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /add_balance
async def add_balance_command(update: Update, context: CallbackContext) -> None:
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –≤—ã–∑–≤–∞–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if update.effective_user.id != 1855791379:  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à chat_id
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–µ—Ä–µ–¥–∞–Ω—ã –¥–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–µ–∑–¥
    if len(context.args) != 2:
        await update.message.reply_text("‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É —Ç–∞–∫: /add_balance <user_id> <amount>")
        return

    user_id, amount = context.args

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ user_id –∏ amount ‚Äî —á–∏—Å–ª–∞
    if not user_id.isdigit() or not amount.isdigit():
        await update.message.reply_text("‚ùå ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–µ–∑–¥ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —á–∏—Å–ª–∞–º–∏.")
        return

    user_id = int(user_id)
    amount = int(amount)

    # –ü–æ–ø–æ–ª–Ω—è–µ–º –±–∞–ª–∞–Ω—Å
    add_balance(user_id, amount)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏
    await update.message.reply_text(f"‚úÖ –ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ {amount} –∑–≤–µ–∑–¥. –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {get_user_data(user_id)['balance']}.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å"
async def check_subscription(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await query.answer()

    if await is_subscribed(update, context):
        user_id = query.from_user.id
        ref_link = f"https://t.me/{BOT_USERNAME}?start={user_id}"  # –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
        keyboard = [
            [InlineKeyboardButton("üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞", callback_data="show_ref_link")],
            [InlineKeyboardButton("–í—ã–≤–æ–¥", callback_data="withdraw")],
            [InlineKeyboardButton("–ú–æ–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã", callback_data="referrals")],
            [InlineKeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data="info")],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await query.edit_message_text(
            f"üéâ –í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã!\n\n"
            f"‚≠ê –í–∞—à –±–∞–ª–∞–Ω—Å: {get_user_data(user_id)['balance']} –∑–≤–µ–∑–¥",
            reply_markup=reply_markup,
        )
    else:
        await query.edit_message_text("‚ùå –í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –∏ –Ω–∞–∂–º–∏—Ç–µ '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å' —Å–Ω–æ–≤–∞.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞"
async def show_ref_link(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await query.answer()

    user_id = query.from_user.id
    ref_link = f"https://t.me/{BOT_USERNAME}?start={user_id}"  # –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–í–µ—Ä–Ω—É—Ç—å—Å—è"
    keyboard = [
        [InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data="back_to_menu")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏ –∏ –∫–Ω–æ–ø–∫–æ–π "–í–µ—Ä–Ω—É—Ç—å—Å—è"
    await query.edit_message_text(
        f"üîó –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n\n{ref_link}",
        reply_markup=reply_markup,
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ú–æ–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã"
async def show_referrals(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await query.answer()

    user_id = query.from_user.id
    user_data = get_user_data(user_id)
    referrals = user_data["referrals"] if user_data else []

    if referrals:
        # –°–æ–±–∏—Ä–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞—Ö
        referral_list = []
        for referral_id in referrals:
            try:
                # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
                user = await context.bot.get_chat(referral_id)
                username = user.username if user.username else user.first_name
                referral_list.append(f"@{username}" if user.username else username)
            except Exception:
                referral_list.append(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {referral_id}")

        text = "–í–∞—à–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã:\n" + "\n".join(referral_list)
    else:
        text = "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤."

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–í–µ—Ä–Ω—É—Ç—å—Å—è"
    keyboard = [
        [InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data="back_to_menu")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await query.edit_message_text(text, reply_markup=reply_markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
async def show_info(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await query.answer()

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–í–µ—Ä–Ω—É—Ç—å—Å—è"
    keyboard = [
        [InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data="back_to_menu")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await query.edit_message_text(
        "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:\n\n"
        "–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–∞–º –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∑–≤–µ–∑–¥—ã, –ø—Ä–∏–≥–ª–∞—à–∞—è –¥—Ä—É–∑–µ–π.\n"
        "–ó–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥–ø–∏—à–µ—Ç—Å—è –Ω–∞ –∫–∞–Ω–∞–ª –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ, –≤—ã –ø–æ–ª—É—á–∏—Ç–µ 2 –∑–≤–µ–∑–¥—ã.\n\n"
        "–°–≤—è–∑–∞–Ω–æ —Å –Ω–∞–º–∏üí´ : —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª —Å–æ –≤—Å–µ–º–∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ –Ω–æ–≤–æ—Å—Ç—è–º–∏ : https://t.me/STAR_SPAIS ‚ÄºÔ∏è.\n\n"
        "–ö–∞–Ω–∞–ª —Å –≤—ã–ø–ª–∞—Ç–∞–º–∏ üåü –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º : https://t.me/lilviplata ‚ÄºÔ∏è.\n",
        reply_markup=reply_markup,
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–í—ã–≤–æ–¥"
async def withdraw(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await query.answer()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–¥–ø–∏—Å–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã
    if not await is_subscribed(update, context):
        # –ï—Å–ª–∏ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è
        keyboard = [
            [InlineKeyboardButton("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞–Ω–∞–ª", url=f"https://t.me/{CHANNEL_USERNAME[1:]}")],
            [InlineKeyboardButton("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª 1", url=f"https://t.me/{ADDITIONAL_CHANNELS[0]['username'][1:]}")],
            [InlineKeyboardButton("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª 2", url=f"https://t.me/{ADDITIONAL_CHANNELS[1]['username'][1:]}")],
            [InlineKeyboardButton("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª 3", url=f"https://t.me/{ADDITIONAL_CHANNELS[2]['username'][1:]}")],
            [InlineKeyboardButton("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å", callback_data="check_subscription")],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await query.edit_message_text(
            "‚ùå –í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –∏ –Ω–∞–∂–º–∏—Ç–µ '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å', —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.",
            reply_markup=reply_markup,
        )
        return

    # –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –≤—ã–≤–æ–¥–∞
    user_id = query.from_user.id
    user_data = get_user_data(user_id)
    balance = user_data["balance"] if user_data else 0

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ "15", "25", "50", "100" –∏ "–í–µ—Ä–Ω—É—Ç—å—Å—è"
    keyboard = [
        [InlineKeyboardButton("15", callback_data="withdraw_15")],
        [InlineKeyboardButton("25", callback_data="withdraw_25")],
        [InlineKeyboardButton("50", callback_data="withdraw_50")],
        [InlineKeyboardButton("100", callback_data="withdraw_100")],
        [InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data="back_to_menu")],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await query.edit_message_text(
        f"‚≠ê –í–∞—à –±–∞–ª–∞–Ω—Å: {balance} –∑–≤–µ–∑–¥\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–µ–∑–¥ –¥–ª—è –≤—ã–≤–æ–¥–∞:",
        reply_markup=reply_markup,
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "15"
async def withdraw_15(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await query.answer()

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–µ–∑–¥ –¥–ª—è —Å–ø–∏—Å–∞–Ω–∏—è
    context.user_data["withdraw_amount"] = 15

    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º ID —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await query.edit_message_text("–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π ID:")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —á—Ç–æ–±—ã –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    context.user_data["awaiting_id"] = True

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "25"
async def withdraw_25(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await query.answer()

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–µ–∑–¥ –¥–ª—è —Å–ø–∏—Å–∞–Ω–∏—è
    context.user_data["withdraw_amount"] = 25

    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º ID —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await query.edit_message_text("–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π ID:")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —á—Ç–æ–±—ã –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    context.user_data["awaiting_id"] = True

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "50"
async def withdraw_50(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await query.answer()

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–µ–∑–¥ –¥–ª—è —Å–ø–∏—Å–∞–Ω–∏—è
    context.user_data["withdraw_amount"] = 50

    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º ID —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await query.edit_message_text("–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π ID:")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —á—Ç–æ–±—ã –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    context.user_data["awaiting_id"] = True

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "100"
async def withdraw_100(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await query.answer()

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–µ–∑–¥ –¥–ª—è —Å–ø–∏—Å–∞–Ω–∏—è
    context.user_data["withdraw_amount"] = 100

    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º ID —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await query.edit_message_text("–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π ID:")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —á—Ç–æ–±—ã –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    context.user_data["awaiting_id"] = True

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ ID
async def handle_id_input(update: Update, context: CallbackContext) -> None:
    user_id = update.message.from_user.id
    user_input = update.message.text

    if context.user_data.get("awaiting_id"):
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–≤–µ–¥–µ–Ω–Ω—ã–π ID
        context.user_data["entered_id"] = user_input

        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–µ–∑–¥ –¥–ª—è —Å–ø–∏—Å–∞–Ω–∏—è
        withdraw_amount = context.user_data.get("withdraw_amount", 0)

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å" –∏ "–û—Ç–º–µ–Ω–∞"
        keyboard = [
            [InlineKeyboardButton("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm_withdraw")],
            [InlineKeyboardButton("–û—Ç–º–µ–Ω–∞", callback_data="cancel_withdraw")],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await update.message.reply_text(
            f"–í—ã –≤–≤–µ–ª–∏ ID: {user_input}\n\n–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤—ã–≤–æ–¥ {withdraw_amount} –∑–≤–µ–∑–¥:",
            reply_markup=reply_markup,
        )

        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è ID
        context.user_data["awaiting_id"] = False

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û—Ç–º–µ–Ω–∞"
async def cancel_withdraw(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await query.answer()

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ä–∞–∑–¥–µ–ª –≤—ã–≤–æ–¥–∞
    await withdraw(update, context)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"
async def confirm_withdraw(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await query.answer()

    user_id = query.from_user.id
    entered_id = context.user_data.get("entered_id")
    withdraw_amount = context.user_data.get("withdraw_amount", 0)

    if entered_id:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ –∑–≤–µ–∑–¥ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
        user_data = get_user_data(user_id)
        if user_data and user_data["balance"] >= withdraw_amount:
            # –°–ø–∏—Å—ã–≤–∞–µ–º –∑–≤–µ–∑–¥—ã
            new_balance = user_data["balance"] - withdraw_amount
            update_user_data(user_id, balance=new_balance)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º ID –≤ –∫–∞–Ω–∞–ª
            await context.bot.send_message(
                chat_id=CHANNEL_CHAT_ID,
                text=f"–ù–æ–≤—ã–π –≤—ã–≤–æ–¥! ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {entered_id}, —Å–ø–∏—Å–∞–Ω–æ {withdraw_amount} –∑–≤–µ–∑–¥.",
            )

            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            await back_to_menu(update, context)
        else:
            # –°–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–µ –∑–≤–µ–∑–¥ —Å –∫–Ω–æ–ø–∫–æ–π "–í–µ—Ä–Ω—É—Ç—å—Å—è"
            keyboard = [
                [InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data="back_to_menu")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)

            await query.edit_message_text(
                f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–≤–µ–∑–¥ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –¢—Ä–µ–±—É–µ—Ç—Å—è {withdraw_amount}, –∞ —É –≤–∞—Å {user_data['balance'] if user_data else 0}.",
                reply_markup=reply_markup,
            )
    else:
        await query.edit_message_text("‚ùå –û—à–∏–±–∫–∞: ID –Ω–µ –Ω–∞–π–¥–µ–Ω.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–í–µ—Ä–Ω—É—Ç—å—Å—è"
async def back_to_menu(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await query.answer()

    user_id = query.from_user.id
    ref_link = f"https://t.me/{BOT_USERNAME}?start={user_id}"  # –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
    keyboard = [
        [InlineKeyboardButton("üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞", callback_data="show_ref_link")],
        [InlineKeyboardButton("–í—ã–≤–æ–¥", callback_data="withdraw")],
        [InlineKeyboardButton("–ú–æ–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã", callback_data="referrals")],
        [InlineKeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data="info")],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –∫–Ω–æ–ø–∫–∞–º–∏
    await query.edit_message_text(
        f"üéâ –í—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã!\n\n"
        f"‚≠ê –í–∞—à –±–∞–ª–∞–Ω—Å: {get_user_data(user_id)['balance']} –∑–≤–µ–∑–¥",
        reply_markup=reply_markup,
    )

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
def main() -> None:
    # –£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º–µ–Ω–Ω—É—é –∑–æ–Ω—É
    timezone = pytz.timezone("Europe/Moscow")

    # –°–æ–∑–¥–∞–π—Ç–µ Application
    application = ApplicationBuilder().token(BOT_TOKEN).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("add_balance", add_balance_command))
    application.add_handler(CallbackQueryHandler(check_subscription, pattern="^check_subscription$"))
    application.add_handler(CallbackQueryHandler(show_ref_link, pattern="^show_ref_link$"))
    application.add_handler(CallbackQueryHandler(show_referrals, pattern="^referrals$"))
    application.add_handler(CallbackQueryHandler(show_info, pattern="^info$"))
    application.add_handler(CallbackQueryHandler(withdraw, pattern="^withdraw$"))
    application.add_handler(CallbackQueryHandler(withdraw_15, pattern="^withdraw_15$"))
    application.add_handler(CallbackQueryHandler(withdraw_25, pattern="^withdraw_25$"))
    application.add_handler(CallbackQueryHandler(withdraw_50, pattern="^withdraw_50$"))
    application.add_handler(CallbackQueryHandler(withdraw_100, pattern="^withdraw_100$"))
    application.add_handler(CallbackQueryHandler(confirm_withdraw, pattern="^confirm_withdraw$"))
    application.add_handler(CallbackQueryHandler(cancel_withdraw, pattern="^cancel_withdraw$"))
    application.add_handler(CallbackQueryHandler(back_to_menu, pattern="^back_to_menu$"))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_id_input))

    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á—É –≤ JobQueue (–ø—Ä–∏–º–µ—Ä)
    application.job_queue.run_daily(callback=daily_task, time=time(12, 0, tzinfo=timezone))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling()

# –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ
async def daily_task(context: CallbackContext):
    await context.bot.send_message(chat_id=CHAT_ID, text="–≠—Ç–æ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!")

# –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã
def close_db_connection():
    conn.close()

atexit.register(close_db_connection)

if __name__ == "__main__":
    main()
